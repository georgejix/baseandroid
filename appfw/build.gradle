apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    def globalConfiguration = rootProject.extensions.getByName("ext")

    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")


    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode globalConfiguration.getAt("androidVersionCode")
        versionName globalConfiguration.getAt("androidVersionName")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    def libraryDependencies = rootProject.ext.libraryDependencies
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation presentationDependencies.appcompat
    compileOnly libraryDependencies.javaxAnnotation
    implementation libraryDependencies.javaxInject
    implementation libraryDependencies.rxJava
    implementation libraryDependencies.rxAndroid
    implementation libraryDependencies.androidAnnotations
    implementation libraryDependencies.gson
    implementation libraryDependencies.guava
    implementation libraryDependencies.okhttp
    implementation libraryDependencies.okhttpLogging
    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.0.2'
    //使用WindowInsetsControllerCompat
    implementation 'androidx.core:core:1.5.0-alpha05'
}

task makeJar(type: Copy) {
    def name = 'appfw-cash.jar'
    delete 'build/output/activity.jar'
    from('build/intermediates/aar_main_jar/release/')
    into('/Users/wangtao/Desktop/app3.0-jar/')
    include('classes.jar')
    rename('classes.jar', name)
}
//执行
makeJar.dependsOn(build)
repositories {
    mavenCentral()
}
